generator client {
  provider      = "prisma-client-js"
  output        = "./client"
  binaryTargets = ["native", "rhel-openssl-3.0.x", "debian-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auction_details {
  created_at                         DateTime  @default(now()) @db.Timestamptz(6)
  exact_order_id                     BigInt
  symbol_auctioning_token            String?
  symbol_bidding_token               String?
  address_auctioning_token           String?
  address_bidding_token              String?
  decimals_auctioning_token          Int?      @db.SmallInt
  decimals_bidding_token             Int?      @db.SmallInt
  end_time_timestamp                 DateTime? @db.Timestamp(6)
  order_cancellation_end_date        DateTime? @db.Timestamp(6)
  starting_time_stamp                DateTime? @db.Timestamp(6)
  minimum_bidding_amount_per_order   BigInt?
  min_funding_threshold              BigInt?
  allow_list_manager                 String?
  allow_list_signer                  String?
  current_volume                     Int?
  current_clearing_order_sell_amount BigInt?
  current_clearing_order_buy_amount  BigInt?
  current_clearing_price             Int?
  current_bidding_amount             BigInt?
  is_atomic_closure_allowed          Boolean?
  is_private_auction                 Boolean?
  interest_score                     Int?
  usd_amount_traded                  Int?
  chain_id                           BigInt

  @@id([exact_order_id, chain_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders {
  created_at      DateTime  @default(now()) @db.Timestamptz(6)
  auction_id      BigInt
  sell_amount     BigInt
  buy_amount      BigInt
  user_id         BigInt
  price           Int?
  volume          BigInt?
  timestamp       DateTime? @db.Timestamp(6)
  transactionHash String    @id
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         BigInt
  created_at DateTime @default(now()) @db.Timestamptz(6)
  address    String

  @@id([id, created_at])
}

model session {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  tx         String   @unique
  account    String
}

model transfers {
  trx_hash    String   @id
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  chain_id    Decimal? @db.Decimal
  token       String?
  from        String?
  to          String?
  type        String?  @default("")
  amount      BigInt?
  usdcred_trx String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model whitelist {
  project_id Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  address    String
  account    String

  @@id([address, project_id, account])
}

model esr {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  code       String?
  trx_id     String?
  account    String?
}
