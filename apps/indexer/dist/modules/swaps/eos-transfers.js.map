{"version":3,"file":"eos-transfers.js","sourceRoot":"/","sources":["modules/swaps/eos-transfers.ts"],"names":[],"mappings":";;;AAAA,iDAA4C;AAC5C,sCAAsC;AACtC,iDAA2D;AAC3D,+CAA2C;AAE3C,8EAA8E;AAC9E,4EAA4E;AAC5E,sEAAsE;AAC/D,KAAK,UAAU,oBAAoB,CAAC,MAAuB,MAAM;IACtE,MAAM,IAAI,GAAG,4BAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,UAAU,CAAC,CAAC,EAAE,OAAO,CAAA;IACpF,MAAM,IAAI,GAAG,4BAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA;IAC3C,MAAM,SAAS,GAAG,4BAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAA;IAEhD,MAAM,YAAY,GAAG,MAAM,IAAA,yCAA0B,EACnD,YAAY,IAAI,+BAA+B,SAAS,EAAE,CAC3D,CAAA;IACD,MAAM,cAAc,GAAG,MAAM,IAAA,yCAA0B,EACrD,YAAY,IAAI,4BAA4B,SAAS,EAAE,CACxD,CAAA;IAED,4BAA4B;IAC5B,YAAY,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAC7C,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAC/E,CAAA;IACD,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,CAC/C,aAAa,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CACxF,CAAA;AACH,CAAC;AAnBD,oDAmBC;AAED,KAAK,UAAU,aAAa,CAAC,IAAuD;IAClF,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAEnC,MAAM,QAAQ,GAAG,MAAM,IAAA,yBAAW,EAChC,4CAA4C,EAC5C,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CACtB,CAAA;IACD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAA,iBAAS,EAAC,QAAQ,CAAC,CAAC,CAAA;AACnD,CAAC","sourcesContent":["import { smartsaleEnv } from 'smartsale-env'\nimport { stringify } from 'viem/utils'\nimport { createFirehoseSubscription } from './dfuse-client'\nimport { issueTokens } from './cred-issuer'\n\n// https://docs.dfuse.eosnation.io/platform/public-apis/search-query-language/\n// https://docs.dfuse.eosnation.io/eosio/public-apis/reference/search/terms/\n// receiver: means the account with code that has executed the action.\nexport async function listenToEosTransfers(env: 'test' | 'prod' = 'test') {\n  const usdt = smartsaleEnv[env].usdt.find((t) => (t.chainType = 'antelope'))?.address\n  const bank = smartsaleEnv[env].bitcash.bank\n  const launchpad = smartsaleEnv[env].smartsale.bk\n\n  const usdtDeposits = await createFirehoseSubscription(\n    `receiver:${bank} action:stbtransfer data.to:${launchpad}`,\n  )\n  const bitusdDeposits = await createFirehoseSubscription(\n    `receiver:${usdt} action:transfer data.to:${launchpad}`,\n  )\n\n  // only first action for now\n  usdtDeposits.on('data', ({ trxId, actions }) =>\n    handleDeposit({ trxId, from: actions[0].from, quantity: actions[0].quantity }),\n  )\n  bitusdDeposits.on('data', ({ trxId, actions }) =>\n    handleDeposit({ trxId, from: actions[0].from, quantity: actions[0].quantity.quantity }),\n  )\n}\n\nasync function handleDeposit(data: { trxId: string; from: string; quantity: string }) {\n  console.log('handle deposit', data)\n\n  const response = await issueTokens(\n    '0x7472312e4e1a373df751f84bd871a4c7a16128fa',\n    BigInt(data.quantity),\n  )\n  console.log('tokens issued', stringify(response))\n}\n"]}