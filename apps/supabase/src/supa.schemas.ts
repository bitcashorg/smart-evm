// Generated by ts-to-zod
import { z } from "zod";
import { Json } from "./supa.types";

export const jsonSchema: z.ZodSchema<Json> = z.lazy(() =>
  z
    .union([
      z.string(),
      z.number(),
      z.boolean(),
      z.record(z.union([jsonSchema, z.undefined()])),
      z.array(jsonSchema),
    ])
    .nullable(),
);

export const auctionDetailsRowSchema = z.object({
  address_auctioning_token: z.string().nullable(),
  address_bidding_token: z.string().nullable(),
  allow_list_manager: z.string().nullable(),
  allow_list_signer: z.string().nullable(),
  chain_id: z.number(),
  created_at: z.string(),
  current_bidding_amount: z.number().nullable(),
  current_clearing_order_buy_amount: z.number().nullable(),
  current_clearing_order_sell_amount: z.number().nullable(),
  current_clearing_price: z.number().nullable(),
  current_volume: z.number().nullable(),
  decimals_auctioning_token: z.number().nullable(),
  decimals_bidding_token: z.number().nullable(),
  end_time_timestamp: z.string().nullable(),
  exact_order_id: z.number(),
  interest_score: z.number().nullable(),
  is_atomic_closure_allowed: z.boolean().nullable(),
  is_private_auction: z.boolean().nullable(),
  min_funding_threshold: z.number().nullable(),
  minimum_bidding_amount_per_order: z.number().nullable(),
  order_cancellation_end_date: z.string().nullable(),
  starting_time_stamp: z.string().nullable(),
  symbol_auctioning_token: z.string().nullable(),
  symbol_bidding_token: z.string().nullable(),
  usd_amount_traded: z.number().nullable(),
});

export const auctionDetailsInsertSchema = z.object({
  address_auctioning_token: z.string().optional().nullable(),
  address_bidding_token: z.string().optional().nullable(),
  allow_list_manager: z.string().optional().nullable(),
  allow_list_signer: z.string().optional().nullable(),
  chain_id: z.number(),
  created_at: z.string().optional(),
  current_bidding_amount: z.number().optional().nullable(),
  current_clearing_order_buy_amount: z.number().optional().nullable(),
  current_clearing_order_sell_amount: z.number().optional().nullable(),
  current_clearing_price: z.number().optional().nullable(),
  current_volume: z.number().optional().nullable(),
  decimals_auctioning_token: z.number().optional().nullable(),
  decimals_bidding_token: z.number().optional().nullable(),
  end_time_timestamp: z.string().optional().nullable(),
  exact_order_id: z.number(),
  interest_score: z.number().optional().nullable(),
  is_atomic_closure_allowed: z.boolean().optional().nullable(),
  is_private_auction: z.boolean().optional().nullable(),
  min_funding_threshold: z.number().optional().nullable(),
  minimum_bidding_amount_per_order: z.number().optional().nullable(),
  order_cancellation_end_date: z.string().optional().nullable(),
  starting_time_stamp: z.string().optional().nullable(),
  symbol_auctioning_token: z.string().optional().nullable(),
  symbol_bidding_token: z.string().optional().nullable(),
  usd_amount_traded: z.number().optional().nullable(),
});

export const auctionDetailsUpdateSchema = z.object({
  address_auctioning_token: z.string().optional().nullable(),
  address_bidding_token: z.string().optional().nullable(),
  allow_list_manager: z.string().optional().nullable(),
  allow_list_signer: z.string().optional().nullable(),
  chain_id: z.number().optional(),
  created_at: z.string().optional(),
  current_bidding_amount: z.number().optional().nullable(),
  current_clearing_order_buy_amount: z.number().optional().nullable(),
  current_clearing_order_sell_amount: z.number().optional().nullable(),
  current_clearing_price: z.number().optional().nullable(),
  current_volume: z.number().optional().nullable(),
  decimals_auctioning_token: z.number().optional().nullable(),
  decimals_bidding_token: z.number().optional().nullable(),
  end_time_timestamp: z.string().optional().nullable(),
  exact_order_id: z.number().optional(),
  interest_score: z.number().optional().nullable(),
  is_atomic_closure_allowed: z.boolean().optional().nullable(),
  is_private_auction: z.boolean().optional().nullable(),
  min_funding_threshold: z.number().optional().nullable(),
  minimum_bidding_amount_per_order: z.number().optional().nullable(),
  order_cancellation_end_date: z.string().optional().nullable(),
  starting_time_stamp: z.string().optional().nullable(),
  symbol_auctioning_token: z.string().optional().nullable(),
  symbol_bidding_token: z.string().optional().nullable(),
  usd_amount_traded: z.number().optional().nullable(),
});

export const esrRowSchema = z.object({
  account: z.string().nullable(),
  code: z.string().nullable(),
  created_at: z.string(),
  id: z.string(),
  trx_id: z.string().nullable(),
});

export const esrInsertSchema = z.object({
  account: z.string().optional().nullable(),
  code: z.string().optional().nullable(),
  created_at: z.string().optional(),
  id: z.string().optional(),
  trx_id: z.string().optional().nullable(),
});

export const esrUpdateSchema = z.object({
  account: z.string().optional().nullable(),
  code: z.string().optional().nullable(),
  created_at: z.string().optional(),
  id: z.string().optional(),
  trx_id: z.string().optional().nullable(),
});

export const ordersRowSchema = z.object({
  auction_id: z.number(),
  buy_amount: z.number(),
  created_at: z.string(),
  price: z.number().nullable(),
  sell_amount: z.number(),
  timestamp: z.string().nullable(),
  transactionHash: z.string(),
  user_id: z.number(),
  volume: z.number().nullable(),
});

export const ordersInsertSchema = z.object({
  auction_id: z.number(),
  buy_amount: z.number(),
  created_at: z.string().optional(),
  price: z.number().optional().nullable(),
  sell_amount: z.number(),
  timestamp: z.string().optional().nullable(),
  transactionHash: z.string(),
  user_id: z.number(),
  volume: z.number().optional().nullable(),
});

export const ordersUpdateSchema = z.object({
  auction_id: z.number().optional(),
  buy_amount: z.number().optional(),
  created_at: z.string().optional(),
  price: z.number().optional().nullable(),
  sell_amount: z.number().optional(),
  timestamp: z.string().optional().nullable(),
  transactionHash: z.string().optional(),
  user_id: z.number().optional(),
  volume: z.number().optional().nullable(),
});

export const preSaleRowSchema = z.object({
  account: z.string().nullable(),
  address: z.string().nullable(),
  created_at: z.string(),
  id: z.number(),
  project_id: z.number().nullable(),
  signature: z.string().nullable(),
});

export const preSaleInsertSchema = z.object({
  account: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  created_at: z.string().optional(),
  id: z.number().optional(),
  project_id: z.number().optional().nullable(),
  signature: z.string().optional().nullable(),
});

export const preSaleUpdateSchema = z.object({
  account: z.string().optional().nullable(),
  address: z.string().optional().nullable(),
  created_at: z.string().optional(),
  id: z.number().optional(),
  project_id: z.number().optional().nullable(),
  signature: z.string().optional().nullable(),
});

export const sessionRowSchema = z.object({
  account: z.string(),
  created_at: z.string(),
  esr_code: z.string().nullable(),
  id: z.string(),
  tx: z.string(),
});

export const sessionInsertSchema = z.object({
  account: z.string(),
  created_at: z.string().optional(),
  esr_code: z.string().optional().nullable(),
  id: z.string().optional(),
  tx: z.string(),
});

export const sessionUpdateSchema = z.object({
  account: z.string().optional(),
  created_at: z.string().optional(),
  esr_code: z.string().optional().nullable(),
  id: z.string().optional(),
  tx: z.string().optional(),
});

export const transfersRowSchema = z.object({
  amount: z.number().nullable(),
  chain_id: z.number().nullable(),
  created_at: z.string(),
  from: z.string().nullable(),
  to: z.string().nullable(),
  token: z.string().nullable(),
  trx_hash: z.string(),
  type: z.string().nullable(),
  usdcred_trx: z.string().nullable(),
});

export const transfersInsertSchema = z.object({
  amount: z.number().optional().nullable(),
  chain_id: z.number().optional().nullable(),
  created_at: z.string().optional(),
  from: z.string().optional().nullable(),
  to: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  trx_hash: z.string(),
  type: z.string().optional().nullable(),
  usdcred_trx: z.string().optional().nullable(),
});

export const transfersUpdateSchema = z.object({
  amount: z.number().optional().nullable(),
  chain_id: z.number().optional().nullable(),
  created_at: z.string().optional(),
  from: z.string().optional().nullable(),
  to: z.string().optional().nullable(),
  token: z.string().optional().nullable(),
  trx_hash: z.string().optional(),
  type: z.string().optional().nullable(),
  usdcred_trx: z.string().optional().nullable(),
});

export const usersRowSchema = z.object({
  address: z.string(),
  created_at: z.string(),
  id: z.number(),
});

export const usersInsertSchema = z.object({
  address: z.string(),
  created_at: z.string().optional(),
  id: z.number(),
});

export const usersUpdateSchema = z.object({
  address: z.string().optional(),
  created_at: z.string().optional(),
  id: z.number().optional(),
});

export const whitelistRowSchema = z.object({
  account: z.string(),
  address: z.string(),
  created_at: z.string(),
  project_id: z.number(),
});

export const whitelistInsertSchema = z.object({
  account: z.string(),
  address: z.string(),
  created_at: z.string().optional(),
  project_id: z.number(),
});

export const whitelistUpdateSchema = z.object({
  account: z.string().optional(),
  address: z.string().optional(),
  created_at: z.string().optional(),
  project_id: z.number().optional(),
});
