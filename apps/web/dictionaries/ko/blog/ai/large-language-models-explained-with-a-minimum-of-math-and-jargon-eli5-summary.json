{
  "relatedBlogs": [
    {
      "id": "190259319",
      "topics": [
        "Summary",
        "LLM",
        "Training"
      ],
      "title": "Latent Space Podcast 8/16/23 [Summary] - The Mathematics of Training LLMs — with Quentin Anthony of Eleuther AI",
      "slug": "latent-space-podcast-8-16-23-summary-the-mathematics-of-training-llms-with-que",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:19:45+01:00",
      "description": "Explore the math behind training LLMs with Quentin Anthony from Eleuther AI. Dive into the Transformers Math 101 article & master distributed training techniques for peak GPU performance.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692324088-screenshot-2023-08-17-at-9-59-17-pm.png"
      },
      "seo": {
        "description": "Dive into the Transformers Math 101 article & master distributed training techniques for peak GPU performance.",
        "title": "Latent Space Podcast 8/16/23 [Summary] Math of Training LLMs",
        "twitterCard": null,
        "image": {
          "width": 1576,
          "height": 554,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692324088-screenshot-2023-08-17-at-9-59-17-pm.png"
        }
      }
    },
    {
      "id": "190259129",
      "topics": [
        "LLM",
        "Hardware",
        "Summary",
        "Edge"
      ],
      "title": "Latent Space Podcast 8/10/23 [Summary]: LLMs Everywhere: Running 70B models in browsers and iPhones using MLC — with Tianqi Chen of CMU / OctoML",
      "slug": "latent-space-podcast-8-10-23-summary-llms-everywhere-running-70b-models-in-browse",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:18:37+01:00",
      "description": "Explore the magic of MLC with Tianqi Chen: deploying 70B models on browsers & iPhones. Dive into XGBoost, TVM's creation, & the future of universal AI deployments. ",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1691894611-screenshot-2023-08-12-at-10-42-43-pm.png"
      },
      "seo": {
        "description": "Explore deploying 70B models on browsers & iPhones. Dive into XGBoost, TVM's creation, & the future of universal AI deployments. ",
        "title": "Latent Space 8/10/23 [Summary]: LLMs Everywhere",
        "twitterCard": null,
        "image": {
          "width": 1538,
          "height": 548,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1691894611-screenshot-2023-08-12-at-10-42-43-pm.png"
        }
      }
    },
    {
      "id": "190259087",
      "topics": [
        "Summary",
        "LLM",
        "Code",
        "Open Source",
        "Small Models"
      ],
      "title": "Latent Space Podcast 8/4/23 [Summary] Latent Space x AI Breakdown crossover pod! ",
      "slug": "latent-space-podcast-8-4-23-summary-latent-space-x-ai-breakdown-crossover-pod",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:16:33+01:00",
      "description": "Join AI Breakdown & Latent Space for the summer AI tech roundup: Dive into GPT4.5, Llama 2, AI tools, the rising AI engineer, and more!",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1691539617-screenshot-2023-08-08-at-8-02-52-pm.png"
      },
      "seo": {
        "description": "Dive into GPT4.5, Llama 2, AI tools, the rising AI engineer, and more!",
        "title": "Latent Space Podcast 8/4/23 [Summary] AI Breakdown crossover",
        "twitterCard": null,
        "image": {
          "width": 1578,
          "height": 558,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1691539617-screenshot-2023-08-08-at-8-02-52-pm.png"
        }
      }
    },
    {
      "id": "190259111",
      "topics": [
        "Summary",
        "Transformers",
        "Training",
        "Open Source"
      ],
      "title": " Latent Space Podcast 7/26/23 [Summary] FlashAttention 2: making Transformers 800% faster - Tri Dao of Together AI",
      "slug": "latent-space-podcast-7-26-23-summary-flashattention-2-making-transformers-800-fas",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:14:13+01:00",
      "description": "Discover how FlashAttention revolutionized AI speed with Tri Dao, as he unveils the power of FlashAttention 2, dives into Stanford's Hazy Lab & future AI insights.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1691543194-screenshot-2023-08-08-at-8-43-59-pm.png"
      },
      "seo": {
        "description": "Discover how FlashAttention revolutionized AI speed with Tri Dao, as he unveils the power of FlashAttention 2",
        "title": " Latent Space Podcast 7/26/23 [Summary] FlashAttention 2",
        "twitterCard": null,
        "image": {
          "width": 1648,
          "height": 594,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1691543194-screenshot-2023-08-08-at-8-43-59-pm.png"
        }
      }
    },
    {
      "id": "190259172",
      "topics": [
        "Summary",
        "LLM",
        "Open Source",
        "Small Models"
      ],
      "title": "Latent Space Podcast 7/19/23 [Summary] - Llama 2: The New Open LLM SOTA (ft. Nathan Lambert, Matt Bornstein, Anton Troynikov, Russell Kaplan, Whole Mars Catalog et al.)",
      "slug": "latent-space-podcast-7-19-23-summary-llama-2-the-new-open-llm-sota-ft-nathan-lamb",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:12:38+01:00",
      "description": "Explore Llama 2, the latest AI breakthrough with experts Nathan Lambert, Matt Bornstein & more. Dive into datasets, benchmarks & AI predictions. Llama insights & drama await in this top podcast!",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1691968295-screenshot-2023-08-13-at-7-11-06-pm.png"
      },
      "seo": {
        "description": "Dive into datasets, benchmarks & AI predictions. Llama insights & drama await in this top podcast!",
        "title": "Latent Space Podcast 7/19/23 [Summary] - Llama 2",
        "twitterCard": null,
        "image": {
          "width": 1632,
          "height": 574,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1691968295-screenshot-2023-08-13-at-7-11-06-pm.png"
        }
      }
    },
    {
      "id": "190259191",
      "topics": [
        "Summary",
        "Code",
        "LLM"
      ],
      "title": "Latent Space Podcast 7/10/23 [Summary] - Code Interpreter == GPT 4.5 (w/ Simon Willison, Alex Volkov, Aravind Srinivas, Alex Graveley, et al.)",
      "slug": "latent-space-podcast-7-10-23-summary-code-interpreter-gpt-4-5-w-simon-willison-al",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:09:26+01:00",
      "description": "Explore ChatGPT's Code Interpreter: a game-changer in AI. Dive into its 1000x capabilities leap with Simon, Alex & top AI experts. #CodeAugmentedInference #GPT4_5",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692048911-screenshot-2023-08-14-at-3-34-05-pm.png"
      },
      "seo": {
        "description": "Explore ChatGPT's Code Interpreter: a game-changer in AI. Dive into its 1000x capabilities leap with Simon, Alex & top AI experts. ",
        "title": "Latent Space Podcast  [Summary] Code Interpreter = GPT 4.5",
        "twitterCard": null,
        "image": {
          "width": 1596,
          "height": 582,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692048911-screenshot-2023-08-14-at-3-34-05-pm.png"
        }
      }
    },
    {
      "id": "190259216",
      "topics": [
        "Summary",
        "Open Source"
      ],
      "title": "Latent Space Podcast 7/2/23 [Summary] AI Trends: a Latent Space x Practical AI crossover pod!",
      "slug": "latent-space-podcast-7-2-23-summary-ai-trends-a-latent-space-x-practical-ai-cross",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:08:36+01:00",
      "description": "Explore the fusion of Practical AI & Latent Space as they delve into 2023's top AI trends, reflect on standout episodes, and share insights on navigating the AI evolution.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692146916-screenshot-2023-08-15-at-5-20-38-pm.png"
      },
      "seo": {
        "description": "2023's top AI trends, reflect on standout episodes, and share insights on navigating the AI evolution.",
        "title": "Latent Space Podcast 7/2/23 [Summary] AI Trends ",
        "twitterCard": null,
        "image": {
          "width": 1600,
          "height": 532,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692146916-screenshot-2023-08-15-at-5-20-38-pm.png"
        }
      }
    },
    {
      "id": "190259238",
      "topics": [
        "Hardware",
        "LLM",
        "Summary"
      ],
      "title": "Latent Space Podcast 6/20/23 [Summary] - Commoditizing the Petaflop — with George Hotz of the tiny corp",
      "slug": "latent-space-podcast-6-20-23-summary-commoditizing-the-petaflop-with-george-ho",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:07:15+01:00",
      "description": "George Hotz of tiny corp challenges Nvidia & Google! Dive into the world of AMD collaborations, insights on ggml, Mojo, Elon & GPT-4, plus a peek into AI Girlfriend. ",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692154615-screenshot-2023-08-15-at-10-55-40-pm.png"
      },
      "seo": {
        "description": "George Hotz of tiny corp challenges Nvidia & Google! AMD collaborations, insights on ggml, Mojo, Elon & GPT-4, plus a peek into AI Girlfriend. ",
        "title": "Latent Space Podcast 6/20/23 [Summary] - George Hotz ",
        "twitterCard": null,
        "image": {
          "width": 1586,
          "height": 508,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692154615-screenshot-2023-08-15-at-10-55-40-pm.png"
        }
      }
    },
    {
      "id": "190259294",
      "topics": [
        "LLM",
        "Functions",
        "Summary"
      ],
      "title": "Latent Space Podcast 6/14/23 [Summary] - Emergency Pod: OpenAI's new Functions API, 75% Price Drop, 4x Context Length (w/ Alex Volkov, Simon Willison, Riley Goodside, Joshua Lochner, Stefania Druga, Eric Elliott, Mayo Oshin et al)",
      "slug": "latent-space-podcast-6-14-23-summary-emergency-pod-openai-s-new-functions-api-75",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:05:04+01:00",
      "description": "Explore the June 2023 OpenAI updates with top AI engineers from Scale, Microsoft, Pinecone, & Huggingface. Dive into the Code x LLM paradigms and discover Recursive Function Agents.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692221668-screenshot-2023-08-16-at-5-32-29-pm.png"
      },
      "seo": {
        "description": "Explore the June 2023 OpenAI updates with top AI engineers from Scale, Microsoft, Pinecone, & Huggingface. ",
        "title": "Latent Space Podcast 6/20/23 [Summary] - Emergency Pod",
        "twitterCard": null,
        "image": {
          "width": 1626,
          "height": 606,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692221668-screenshot-2023-08-16-at-5-32-29-pm.png"
        }
      }
    },
    {
      "id": "190259333",
      "topics": [
        "LLM",
        "Summary",
        "UX"
      ],
      "title": "Latent Space Podcast 6/8/23 [Summary] - From RLHF to RLHB: The Case for Learning from Human Behavior - with Jeffrey Wang and Joe Reeve of Amplitude",
      "slug": "latent-space-podcast-6-8-23-summary-from-rlhf-to-rlhb-the-case-for-learning-from",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:02:33+01:00",
      "description": "Explore AI & analytics with Jeffrey Wang & Joe Reeve on Latent Space Live! Dive into why AI values Analytics and the power of first-party behavioral data. ",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692386432-screenshot-2023-08-18-at-3-17-04-pm.png"
      },
      "seo": {
        "description": "Explore AI & analytics with Jeffrey Wang & Joe Reeve on Latent Space Live! Dive into why AI values Analytics and the power of first-party behavioral data. ",
        "title": "Latent Space Podcast 6/8/23 [Summary] - From RLHF to RLHB",
        "twitterCard": null,
        "image": {
          "width": 1674,
          "height": 550,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692386432-screenshot-2023-08-18-at-3-17-04-pm.png"
        }
      }
    },
    {
      "id": "190260528",
      "topics": [
        "Summary",
        "LLM",
        "UX"
      ],
      "title": "Latent Space Podcast 6/1/23 [Summary] - Building the AI × UX Scenius — with Linus Lee of Notion AI",
      "slug": "latent-space-podcast-6-1-23-summary-building-the-ai-x-ux-scenius-with-linus-le",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T09:00:12+01:00",
      "description": "Explore Notion AI's transformative approach to AI and UX. Dive into the future of AI-augmented workspaces, the value beyond chat interfaces, and insights on effective knowledge work. Recap of AI×UX NYC meetup included!",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692390655-screenshot-2023-08-18-at-4-28-51-pm.png"
      },
      "seo": {
        "description": "Explore Notion AI's transformative approach to AI and UX. ",
        "title": "Latent Space Podcast 6/1/23 [Summary] - AI × UX Scenius",
        "twitterCard": null,
        "image": {
          "width": 1614,
          "height": 546,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692390655-screenshot-2023-08-18-at-4-28-51-pm.png"
        }
      }
    },
    {
      "id": "190260557",
      "topics": [
        "Summary",
        "Code",
        "LLM",
        "Agents"
      ],
      "title": "Latent Space Podcast 5/25/23 [Summary] - Debugging the Internet with AI agents – with Itamar Friedman of Codium AI and AutoGPT",
      "slug": "latent-space-podcast-5-25-23-summary-debugging-the-internet-with-ai-agents-with",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:58:27+01:00",
      "description": "Explore the future of AI with Itamar Friedman from Codium AI on 'Debugging the Internet'. Dive into 'Extreme DRY' agents, the rapid sync of specs & tests, and the balance between code & testing. Plus, insights from Toran & an exclusive look at AutoGPT's roadmap!",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692397413-screenshot-2023-08-18-at-6-10-09-pm.png"
      },
      "seo": {
        "description": "Dive into 'Extreme DRY' agents, the rapid sync of specs & tests, and the balance between code & testing. ",
        "title": "Latent Space Pod 5/25/23 [Summary] Debugging the Internet",
        "twitterCard": null,
        "image": {
          "width": 1568,
          "height": 548,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692397413-screenshot-2023-08-18-at-6-10-09-pm.png"
        }
      }
    },
    {
      "id": "190260577",
      "topics": [
        "LLM",
        "Small Models"
      ],
      "title": "Latent Space Podcast 5/20/23 [Summary] - MPT-7B and The Beginning of Context=Infinity — with Jonathan Frankle and Abhinav Venigalla of MosaicML",
      "slug": "latent-space-podcast-5-20-23-summary-mpt-7b-and-the-beginning-of-context-infinity",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:57:33+01:00",
      "description": "Dive into MosaicML's 9-day, $200k \"llongboi\" MPT-7B training, data prep insights, & the rise of open AI models with experts Frankle & Venigalla.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692409795-screenshot-2023-08-18-at-9-49-21-pm.png"
      },
      "seo": {
        "description": "Dive into MosaicML's 9-day, $200k \"llongboi\" MPT-7B training, data prep insights, & the rise of open AI models ",
        "title": "Latent Space Podcast 6/25/23 [Summary] MosaicML",
        "twitterCard": null,
        "image": {
          "width": 1568,
          "height": 556,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692409795-screenshot-2023-08-18-at-9-49-21-pm.png"
        }
      }
    },
    {
      "id": "190260597",
      "topics": [
        "LLM",
        "Structured Data"
      ],
      "title": "Latent Space Podcast 5/15/23 [Summary] - Guaranteed quality and structure in LLM outputs - with Shreya Rajpal of Guardrails AI",
      "slug": "latent-space-podcast-5-15-23-summary-guaranteed-quality-and-structure-in-llm-outp",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:56:26+01:00",
      "description": "Explore Ep. 12 with Shreya Rajpal of Guardrails AI: Dive deep into validating LLM outputs, refining answers through re-asking loops, and establishing SLAs for models. Master the nuances of AI quality assurance.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692495732-screenshot-2023-08-19-at-9-38-27-pm.png"
      },
      "seo": {
        "description": "Explore Ep. 12 with Shreya Rajpal of Guardrails AI: Dive deep into validating LLM outputs.",
        "title": "Latent Space Podcast 5/15/23 [Summary] Quality LLM Outputs",
        "twitterCard": null,
        "image": {
          "width": 1580,
          "height": 512,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692495732-screenshot-2023-08-19-at-9-38-27-pm.png"
        }
      }
    },
    {
      "id": "190260606",
      "topics": [
        "LLM",
        "Training",
        "Agents",
        "Multimodal"
      ],
      "title": "Latent Space Podcast 5/8/23 [Summary] - The AI Founder Gene: Being Early, Building Fast, and Believing in Greatness — with Sharif Shameem of Lexica",
      "slug": "latent-space-podcast-5-8-23-summary-the-ai-founder-gene-being-early-building-fast",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:52:09+01:00",
      "description": "Ep.11 with Sharif Shameem of Lexica: Dive into the AI founder mindset, uncovering the secrets to pioneering innovation, building game-changing tech, training models, and the intriguing potential of Agents and genomic sequencing. ",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692501984-screenshot-2023-08-19-at-11-24-05-pm.png"
      },
      "seo": {
        "description": "Ep.11 with Sharif Shameem of Lexica: Dive into the AI founder mindset, uncovering the secrets to pioneering innovation.",
        "title": "Latent Space Pod 5/8/23 [Summary] The AI Founder Gene",
        "twitterCard": null,
        "image": {
          "width": 1606,
          "height": 550,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692501984-screenshot-2023-08-19-at-11-24-05-pm.png"
        }
      }
    },
    {
      "id": "190260640",
      "topics": [
        "Summary",
        "Open Source",
        "LLM"
      ],
      "title": "Latent Space Podcast 5/5/23 [Summary] - No Moat: Closed AI gets its Open Source wakeup call — ft. Simon Willison",
      "slug": "latent-space-podcast-5-5-23-summary-no-moat-closed-ai-gets-its-open-source-wakeup",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:49:18+01:00",
      "description": "Explore 'No Moat: Closed AI's Open Source Awakening' with Simon Willison. Dive into leaked Google Moat memo insights, Google Brain Drain, and Python's speed boost with Mojo.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692566921-screenshot-2023-08-20-at-5-25-53-pm.png"
      },
      "seo": {
        "description": "Explore 'No Moat: Closed AI's Open Source Awakening' with Simon Willison. Dive into leaked Google Moat memo insights.",
        "title": "Latent Space Podcast 5/5/23 [Summary] - No Moat",
        "twitterCard": null,
        "image": {
          "width": 1602,
          "height": 532,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692566921-screenshot-2023-08-20-at-5-25-53-pm.png"
        }
      }
    },
    {
      "id": "190260671",
      "topics": [
        "LLM",
        "Code",
        "Summary"
      ],
      "title": "Latent Space Podcast 5/3/23 [Summary] - Training a SOTA Code LLM in 1 week and Quantifying the Vibes — with Reza Shabani of Replit",
      "slug": "latent-space-podcast-5-3-23-summary-training-a-sota-code-llm-in-1-week-and-quanti",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:46:08+01:00",
      "description": "Ep. 10 with Reza Shabani: Dive deep into the rapid training of a state-of-the-art Code LLM, explore Replit Ghostwriter's future, and journey from Finance to AI. Discover the transition from Kaplan to Chinchilla and more!",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1692584998-screenshot-2023-08-20-at-10-17-26-pm.png"
      },
      "seo": {
        "description": "Ep. 10 with Reza Shabani: Dive deep into the rapid training of a state-of-the-art Code LLM!",
        "title": "Latent Space Pod 5/3/23 [Summary] - SOTA Code LLM",
        "twitterCard": null,
        "image": {
          "width": 1566,
          "height": 530,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1692584998-screenshot-2023-08-20-at-10-17-26-pm.png"
        }
      }
    },
    {
      "id": "190629271",
      "topics": [
        "LLM",
        "Small Models",
        "Summary"
      ],
      "title": "Latent Space Podcast 4/28/23 [Summary] - Mapping the future of *truly* Open Models and Training Dolly for $30 — with Mike Conover of Databricks",
      "slug": "latent-space-podcast-4-28-23-summary-mapping-the-future-of-truly-open-models-and",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:33:12+01:00",
      "description": "Explore the future of open models with Mike Conover of Databricks. Dive deep into Dolly's creation, its transition from 1.0 to 2.0, & the influences behind its development. Ep.9 touches on model infrastructure, Databricks' vision, & more. #AI #OpenModels #Dolly",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1694038707-screenshot-2023-09-06-at-3-12-24-pm.png"
      },
      "seo": {
        "description": "Ep.9 touches on model infrastructure, Databricks' vision, & more. #AI #OpenModels #Dolly",
        "title": "Latent Space Pod 4/28/23 [Summary] - Mike of Databricks",
        "twitterCard": null,
        "image": {
          "width": 1572,
          "height": 628,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1694038707-screenshot-2023-09-06-at-3-12-24-pm.png"
        }
      }
    },
    {
      "id": "191164291",
      "topics": [
        "LLM",
        "Enterprise",
        "Summary"
      ],
      "title": "Latent Space Podcast 4/21/23 [Summary] - AI-powered Search for the Enterprise — with Deedy Das of Glean",
      "slug": "latent-space-podcast-4-21-23-summary-ai-powered-search-for-the-enterprise-with",
      "authorName": "Prof. Otto Nomos",
      "authorPicture": {
        "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
      },
      "_publishedAt": "2023-10-05T08:31:31+01:00",
      "description": "Ep.8: Dive into AI in enterprise search with Deedy Das of Glean. Unpack challenges in creating an AI search giant, Google vs ChatGPT comparisons, AI infrastructure intricacies, spotting AI-generated text, and why businesses need more than just Document QA.",
      "thumbnail": {
        "url": "https://www.datocms-assets.com/101962/1694134074-screenshot-2023-09-07-at-5-43-48-pm.png"
      },
      "seo": {
        "description": "Ep.8: Dive into AI in enterprise search with Deedy Das of Glean. Unpack challenges in creating an AI search giant, Google vs ChatGPT ...",
        "title": "Latent Space Podcast 4/21/23 [Summary] - with Deedy Das ",
        "twitterCard": null,
        "image": {
          "width": 1608,
          "height": 530,
          "title": null,
          "alt": null,
          "url": "https://www.datocms-assets.com/101962/1694134074-screenshot-2023-09-07-at-5-43-48-pm.png"
        }
      }
    }
  ],
  "blogContent": {
    "id": "190258948",
    "topics": [
      "Summary",
      "LLM"
    ],
    "title": "Large language models, explained with a minimum of math and jargon [Summary]",
    "slug": "large-language-models-explained-with-a-minimum-of-math-and-jargon-eli5-summary",
    "authorName": "Prof. Otto Nomos",
    "authorPicture": {
      "url": "https://www.datocms-assets.com/101962/1692842125-profottonomosheadshot.png"
    },
    "_publishedAt": "2023-10-05T06:40:32+01:00",
    "description": "Explore the power of AI language models like GPT-3 & GPT-4, their impressive performance, and the concept of 'theory of mind' in AI.",
    "thumbnail": {
      "url": "https://www.datocms-assets.com/101962/1690601993-abr3-img1.png"
    },
    "contentBlock": [
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Large language models, explained with a minimum of math and jargon [ELI5 Summary]"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Blog Article: "
                    },
                    {
                      "url": "https://www.understandingai.org/p/large-language-models-explained-with",
                      "type": "link",
                      "children": [
                        {
                          "type": "span",
                          "value": "https://www.understandingai.org/p/large-language-models-explained-with"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Authors: "
                    },
                    {
                      "url": "https://substack.com/@timothyblee",
                      "type": "link",
                      "children": [
                        {
                          "type": "span",
                          "value": "TIMOTHY B LEE"
                        }
                      ]
                    },
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": " AND "
                    },
                    {
                      "url": "https://substack.com/@seantrott",
                      "type": "link",
                      "children": [
                        {
                          "type": "span",
                          "value": "SEAN TROTT"
                        }
                      ]
                    },
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "\n"
                    }
                  ]
                },
                {
                  "type": "heading",
                  "level": 3,
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Introduction"
                    }
                  ]
                },
                {
                  "type": "list",
                  "style": "numbered",
                  "children": [
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "span",
                              "marks": [
                                "strong"
                              ],
                              "value": "Introduction of ChatGPT"
                            },
                            {
                              "type": "span",
                              "value": ": Last fall, a tool called ChatGPT was introduced. It's a type of Large Language Model (LLM), a big brain for computers that helps them understand and generate human-like text. This was a big deal in the tech world, but most people didn't really know about LLMs or how powerful they could be."
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "span",
                              "marks": [
                                "strong"
                              ],
                              "value": "Popularity and Understanding of LLMs"
                            },
                            {
                              "type": "span",
                              "value": ": Now, lots of people have heard about LLMs and many have even used them. But, understanding how they work is still a mystery for most. They know that LLMs are trained to \"predict the next word\" in a sentence and need a lot of text data to do this, but the details are often unclear."
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "span",
                              "marks": [
                                "strong"
                              ],
                              "value": "How LLMs are Different"
                            },
                            {
                              "type": "span",
                              "value": ": Unlike traditional software that's built by humans giving step-by-step instructions to computers, LLMs like ChatGPT are built on something called a neural network. This network learns from billions of words in ordinary language. Because of this, even the experts don't fully understand how LLMs work on the inside."
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "span",
                              "marks": [
                                "strong"
                              ],
                              "value": "The Goal of the Article"
                            },
                            {
                              "type": "span",
                              "value": ": The article aims to explain what we do know about how LLMs work, in a way that's easy for everyone to understand, without using technical jargon or complex math."
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "type": "listItem",
                      "children": [
                        {
                          "type": "paragraph",
                          "children": [
                            {
                              "type": "span",
                              "marks": [
                                "strong"
                              ],
                              "value": "What the Article Will Cover"
                            },
                            {
                              "type": "span",
                              "value": ": The article will explain how LLMs represent and understand language using something called word vectors. It will also talk about the transformer, a basic component of systems like ChatGPT. Lastly, it will explain how these models are trained and why they need so much data to work well."
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": [
          {
            "basename": "abr3-img1",
            "height": 862,
            "width": 862,
            "filename": "abr3-img1.png",
            "format": "png",
            "alt": null,
            "url": "https://www.datocms-assets.com/101962/1690601993-abr3-img1.png"
          }
        ]
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "Word vectors"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Word Vectors:"
                    },
                    {
                      "type": "span",
                      "value": " To understand how language models work, you need to know how they represent words. While we humans use a sequence of letters like C-A-T for \"cat\", language models use a long list of numbers called a \"word vector\". This list can be as long as 300 numbers."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Why Use Word Vectors?:"
                    },
                    {
                      "type": "span",
                      "value": " Think of it like coordinates on a map. Just like we can represent the location of a city with coordinates (like [38.9, 77] for Washington DC), we can represent words with coordinates in an imaginary \"word space\". Words that have similar meanings are close together in this space. So \"cat\" might be close to \"dog\", \"kitten\", and \"pet\". This is useful because it allows the computer to understand relationships between words."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "High-Dimensional Space:"
                    },
                    {
                      "type": "span",
                      "value": " Words are complex, so we need a lot of dimensions to represent them accurately. While we humans can't really imagine a space with hundreds or thousands of dimensions, computers can handle it just fine."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Word2Vec:"
                    },
                    {
                      "type": "span",
                      "value": " This idea of word vectors really became popular when Google introduced a project called word2vec in 2013. They used a lot of text from Google News to train a computer to understand which words appear together often. This helped the computer place similar words close together in the word space."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Vector Arithmetic:"
                    },
                    {
                      "type": "span",
                      "value": " An interesting thing about word vectors is that you can do math with them to find relationships between words. For example, if you take the vector for \"biggest\", subtract \"big\", and add \"small\", you get \"smallest\". This is like saying \"big is to biggest as small is to smallest\". You can find many other relationships this way."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Biases:"
                    },
                    {
                      "type": "span",
                      "value": " Because word vectors are based on how humans use words, they can sometimes reflect human biases. For example, if you subtract \"man\" from \"doctor\" and add \"woman\", you might get \"nurse\". Researchers are working on ways to reduce these biases."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Usefulness:"
                    },
                    {
                      "type": "span",
                      "value": " Despite these challenges, word vectors are very useful for language models. They help the computer understand how words are related and apply knowledge from one word to similar words. For example, if the model learns that a \"cat\" goes to the vet, it can guess that a \"dog\" might also go to the vet. Or if it learns that people in Paris speak French, it can guess that people in Berlin speak German."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "Word meaning depends on context"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Word Meaning and Context:"
                    },
                    {
                      "type": "span",
                      "value": " Words can have different meanings depending on the context in which they're used. For example, \"bank\" can mean a financial institution or the land next to a river. Similarly, \"magazine\" can refer to a physical publication or an organization that publishes magazines."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Homonyms and Polysemy:"
                    },
                    {
                      "type": "span",
                      "value": " When a word has two unrelated meanings, like \"bank\", we call them homonyms. When a word has two closely related meanings, like \"magazine\", we call it polysemous."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Language Models and Context:"
                    },
                    {
                      "type": "span",
                      "value": " Large Language Models (LLMs) like ChatGPT can understand these differences in meaning based on context. They use different vectors (lists of numbers) to represent the different meanings of a word. For example, there's one vector for \"bank\" as a financial institution and another for \"bank\" as land next to a river."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Ambiguity in Language:"
                    },
                    {
                      "type": "span",
                      "value": " Unlike traditional software that works with clear and unambiguous data, natural language is full of ambiguities. For example, in the sentence \"the customer asked the mechanic to fix his car\", it's not clear if \"his\" refers to the customer or the mechanic. People understand these ambiguities based on context and their knowledge of the world, and LLMs try to do the same."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Word Vectors and Context:"
                    },
                    {
                      "type": "span",
                      "value": " Word vectors provide a way for language models to understand the precise meaning of a word in a specific context. This is a fundamental part of how language models work."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "Transforming word vectors into word predictions"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Transforming Word Vectors into Word Predictions:"
                    },
                    {
                      "type": "span",
                      "value": " GPT-3, the model behind ChatGPT, is organized into dozens of layers. Each layer takes a sequence of word vectors (the number lists that represent words) and adds information to help clarify the meaning of each word and predict the next word."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Layers and Transformers:"
                    },
                    {
                      "type": "span",
                      "value": " Each layer of GPT-3 is a transformer, a type of neural network architecture. The input to the model is a sentence, with each word represented as a word vector. These vectors are fed into the first transformer, which adds context to the words. For example, it might figure out that \"wants\" and \"cash\" are verbs in the sentence \"John wants his bank to cash the.\""
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Hidden State Vectors:"
                    },
                    {
                      "type": "span",
                      "value": " The transformer modifies the word vectors based on the context it has figured out, creating new vectors known as hidden state vectors. These vectors are then passed to the next transformer, which adds more context. For example, the second transformer might clarify that \"bank\" refers to a financial institution and that \"his\" refers to John."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Layers and Understanding:"
                    },
                    {
                      "type": "span",
                      "value": " GPT-3 has many layers (the most powerful version has 96). The first few layers focus on understanding the syntax of the sentence and resolving ambiguities. Later layers work to develop a high-level understanding of the text as a whole. For example, as GPT-3 reads through a short story, it keeps track of information about the characters, their relationships, locations, and so on."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Large Word Vectors:"
                    },
                    {
                      "type": "span",
                      "value": " GPT-3 uses very large word vectors, with each word represented by a list of 12,288 numbers. This large size allows GPT-3 to keep track of a lot of information about the context of each word."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Final Goal:"
                    },
                    {
                      "type": "span",
                      "value": " The final goal of the model is for the last layer to output a hidden state for the final word that includes all the necessary information to predict the next word. This means that by the time the model gets to the end of a sentence or a passage, it has a very detailed understanding of the text."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": [
          {
            "basename": "screenshot-2023-07-28-at-11-21-06-pm",
            "height": 954,
            "width": 1468,
            "filename": "screenshot-2023-07-28-at-11-21-06-pm.png",
            "format": "png",
            "alt": null,
            "url": "https://www.datocms-assets.com/101962/1690601483-screenshot-2023-07-28-at-11-21-06-pm.png"
          }
        ]
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "Can I have your attention please"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Transformers and Attention:"
                    },
                    {
                      "type": "span",
                      "value": " Transformers, the building blocks of GPT-3, have a two-step process for updating the hidden state (the context-enriched word vectors) for each word. The first step is the attention step, where words \"look around\" for other words that have relevant context and share information with them. The second step is the feed-forward step, where each word \"thinks about\" the information gathered in the attention step and tries to predict the next word."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Attention Mechanism:"
                    },
                    {
                      "type": "span",
                      "value": " The attention mechanism can be thought of as a matchmaking service for words. Each word makes a checklist (a query vector) describing the characteristics of words it's looking for. Each word also makes a checklist (a key vector) describing its own characteristics. The network compares each key vector to each query vector to find the best matches and transfers information between matching words."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Attention Heads:"
                    },
                    {
                      "type": "span",
                      "value": " Each attention layer has several \"attention heads\", which means the information-swapping process happens several times at each layer. Each attention head focuses on a different task, such as matching pronouns with nouns, resolving the meaning of homonyms, or linking together two-word phrases. The results of an attention operation in one layer become an input for an attention head in a subsequent layer."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "GPT-3's Scale:"
                    },
                    {
                      "type": "span",
                      "value": " The largest version of GPT-3 has 96 layers with 96 attention heads each, so it performs 9,216 attention operations each time it predicts a new word. This massive scale allows GPT-3 to handle passages with thousands of words and take full advantage of the parallel processing power of modern GPU chips."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "A real-world example"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Real-World Example:"
                    },
                    {
                      "type": "span",
                      "value": " Scientists at Redwood Research studied how GPT-2, a predecessor to ChatGPT, predicted the next word in a sentence. They found that three types of attention heads contributed to the prediction."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Name Mover Heads:"
                    },
                    {
                      "type": "span",
                      "value": " These attention heads copied information from the word \"Mary\" to the final input vector (for the word \"to\"). GPT-2 uses the information in this rightmost vector to predict the next word."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Subject Inhibition Heads:"
                    },
                    {
                      "type": "span",
                      "value": " These attention heads marked the second \"John\" vector in a way that blocked the Name Mover Heads from copying the name \"John\"."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Duplicate Token Heads:"
                    },
                    {
                      "type": "span",
                      "value": " These attention heads marked the second \"John\" vector as a duplicate of the first \"John\" vector, which helped the Subject Inhibition Heads to decide that \"John\" shouldn’t be copied."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Complexity of Understanding LLMs:"
                    },
                    {
                      "type": "span",
                      "value": " Despite this detailed analysis, we are still far from having a comprehensive explanation for why GPT-2 decided to predict \"Mary\" as the next word. It could take months or even years of additional effort just to understand the prediction of a single word. The language models underlying ChatGPT—GPT-3.5 and GPT-4—are significantly larger and more complex than GPT-2, making the task of fully explaining how these systems work a huge and ongoing project."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "The feed-forward step"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Feed-Forward Step:"
                    },
                    {
                      "type": "span",
                      "value": " After the attention heads transfer information between word vectors, a feed-forward network analyzes each word vector and tries to predict the next word. This step doesn't exchange information between words but uses any information previously copied by an attention head."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Structure of the Feed-Forward Layer:"
                    },
                    {
                      "type": "span",
                      "value": " The feed-forward layer in GPT-3 consists of neurons that compute a weighted sum of their inputs. The layer is powerful due to its huge number of connections. In the largest version of GPT-3, each feed-forward layer has 1.2 billion weight parameters, accounting for almost two-thirds of GPT-3’s overall total of 175 billion parameters."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Pattern Matching:"
                    },
                    {
                      "type": "span",
                      "value": " Researchers found that feed-forward layers work by pattern matching, with each neuron in the hidden layer matching a specific pattern in the input text. The patterns matched by neurons become more abstract in the later layers. Early layers tend to match specific words, whereas later layers match phrases that fall into broader semantic categories."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Adding Information to Word Vector:"
                    },
                    {
                      "type": "span",
                      "value": " When a neuron matches one of these patterns, it adds information to the word vector. This information can often be thought of as a tentative prediction about the next word."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": [
          {
            "basename": "screenshot-2023-07-28-at-11-20-45-pm",
            "height": 804,
            "width": 1466,
            "filename": "screenshot-2023-07-28-at-11-20-45-pm.png",
            "format": "png",
            "alt": null,
            "url": "https://www.datocms-assets.com/101962/1690601430-screenshot-2023-07-28-at-11-20-45-pm.png"
          }
        ]
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "Feed-forward networks reason with vector math"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Vector Math in Feed-Forward Networks:"
                    },
                    {
                      "type": "span",
                      "value": " Feed-forward layers in language models like GPT-2 sometimes use vector arithmetic to predict the next word. This is similar to the way Google's word2vec model uses vector arithmetic to reason by analogy, such as Berlin - Germany + France = Paris."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Real-World Example:"
                    },
                    {
                      "type": "span",
                      "value": " Researchers from Brown University found that GPT-2 used this method to answer questions about the capitals of countries. For example, when asked \"What is the capital of Poland?\", the model started predicting the correct answer, Warsaw, after the 20th layer. The researchers found that the 20th feed-forward layer achieved this by adding a vector that maps country vectors to their corresponding capitals."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Other Transformations:"
                    },
                    {
                      "type": "span",
                      "value": " The same model used vector arithmetic in its feed-forward layers to transform lower-case words into upper-case words and present-tense words into their past-tense equivalents. This shows the flexibility and power of vector arithmetic in language models."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "The attention and feed-forward layers have different jobs"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Division of Labor in Language Models:"
                    },
                    {
                      "type": "span",
                      "value": " In language models like GPT-2, attention heads and feed-forward layers have different roles. Attention heads are responsible for retrieving information from earlier words in a prompt, while feed-forward layers allow the model to \"remember\" information that isn't present in the prompt."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Attention Heads:"
                    },
                    {
                      "type": "span",
                      "value": " These components of the model focus on the context provided in the prompt. They help the model understand relationships between words in the given text, such as who is doing what to whom."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Feed-Forward Layers:"
                    },
                    {
                      "type": "span",
                      "value": " These layers act like a database of information that the model has learned from its training data. They allow the model to recall facts and relationships that aren't explicitly stated in the prompt. For example, they can remember that \"Warsaw\" is the capital of \"Poland\" even if this fact isn't mentioned in the prompt."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Layer Complexity:"
                    },
                    {
                      "type": "span",
                      "value": " The earlier feed-forward layers tend to encode simpler facts related to specific words, such as \"Trump often comes after Donald.\" The later layers encode more complex relationships, such as \"add this vector to convert a country to its capital.\" This shows that as the model processes the text, it moves from understanding basic word relationships to grasping more complex concepts and facts."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "How language models are trained"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Training Language Models:"
                    },
                    {
                      "type": "span",
                      "value": " Language models like GPT-3 are trained using large amounts of text data. They learn by predicting the next word in a sequence of words. For example, given the sentence \"I like my coffee with cream and...\", the model might predict \"sugar\" as the next word."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "No Need for Labeled Data:"
                    },
                    {
                      "type": "span",
                      "value": " Unlike many early machine learning models that required human-labeled data, language models don't need explicitly labeled data. They can learn from any written material, such as Wikipedia articles or news stories."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Weight Adjustment:"
                    },
                    {
                      "type": "span",
                      "value": " Initially, the model's predictions are not very accurate because its weight parameters (which determine how it makes predictions) start off as random numbers. However, as the model processes more and more text data, these weights are gradually adjusted to improve the model's predictions."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "The Training Process:"
                    },
                    {
                      "type": "span",
                      "value": " The training process involves two steps. The first is a \"forward pass,\" where the model makes a prediction. The second is a \"backwards pass,\" where the model adjusts its weight parameters based on how accurate its prediction was. This adjustment process is guided by an algorithm called backpropagation."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Scale of Training:"
                    },
                    {
                      "type": "span",
                      "value": " Training a model like GPT-3 is a massive task. It involves repeating the forward and backward pass billions of times, once for each word in the training data. This requires a huge amount of computational power and time. For instance, training GPT-3 took months of work for dozens of high-end computer chips and involved over 300 billion trillion calculations."
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      },
      {
        "mainContent": {
          "value": {
            "schema": "dast",
            "document": {
              "type": "root",
              "children": [
                {
                  "type": "heading",
                  "level": 2,
                  "children": [
                    {
                      "type": "span",
                      "value": "The surprising performance of GPT-3"
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Surprising Performance of GPT-3:"
                    },
                    {
                      "type": "span",
                      "value": " Language models like GPT-3 have shown impressive performance in tasks like essay writing, analogy drawing, and even coding. This is largely due to the scale of their training - GPT-3, for example, was trained on about 500 billion words, which is much more than a human child encounters by age 10."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Increasing Model Size:"
                    },
                    {
                      "type": "span",
                      "value": " Over the years, OpenAI has increased the size of its language models, which has led to better performance on language tasks. The larger models not only learned more facts but also performed better on tasks requiring abstract reasoning."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Theory of Mind:"
                    },
                    {
                      "type": "span",
                      "value": " Recent research has shown that larger models like GPT-3 can perform well on tasks that require understanding the mental states of others, a capability known as \"theory of mind\". However, there's ongoing debate about whether these results truly indicate a form of understanding or are just the result of the model's ability to predict language patterns."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Artificial General Intelligence:"
                    },
                    {
                      "type": "span",
                      "value": " There are also examples of language models showing signs of artificial general intelligence, the ability to think in a sophisticated, human-like way. For instance, GPT-4 was able to generate code to draw a unicorn and correctly place a horn on it when asked, despite its training data being entirely text-based."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Predictability of Language:"
                    },
                    {
                      "type": "span",
                      "value": " One reason why language models work so well could be the predictability of language itself. Regularities in language often reflect regularities in the physical world, so when a language model learns about relationships among words, it's often implicitly learning about relationships in the world too."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "marks": [
                        "strong"
                      ],
                      "value": "Prediction as a Foundation of Intelligence:"
                    },
                    {
                      "type": "span",
                      "value": " The idea of making predictions is seen as foundational to both biological and artificial intelligence. The human brain is often thought of as a \"prediction machine\" that makes predictions about our environment to navigate it successfully. Similarly, language models learn a lot about how human language works by figuring out how to best predict the next word. However, this approach has led to systems whose inner workings we don't fully understand."
                    }
                  ]
                },
                {
                  "type": "paragraph",
                  "children": [
                    {
                      "type": "span",
                      "value": ""
                    }
                  ]
                }
              ]
            }
          }
        },
        "topImages": []
      }
    ],
    "seo": {
      "description": "Explore the power of AI language models like GPT-3 & GPT-4, their impressive performance, and the concept of 'theory of mind' in AI.",
      "title": "Large language models, explained [Summary]",
      "twitterCard": null,
      "image": {
        "width": 862,
        "height": 862,
        "title": null,
        "alt": null,
        "url": "https://www.datocms-assets.com/101962/1690601993-abr3-img1.png"
      }
    }
  },
  "topics": [
    "Summary",
    "LLM"
  ]
}